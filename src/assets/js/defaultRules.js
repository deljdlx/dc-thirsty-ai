import RuleManager from './RuleManager.js';
import PromptSizeRule from './rules/PromptSizeRule.js';
import ComplexWordsRule from './rules/ComplexWordsRule.js';
import ImageGenerationRule from './rules/ImageGenerationRule.js';
import TechnicalContentRule from './rules/TechnicalContentRule.js';
import StructuredCodeRule from './rules/StructuredCodeRule.js';
import LongPromptRule from './rules/LongPromptRule.js';
import AnalyticalIntentRule from './rules/AnalyticalIntentRule.js';
import ForeignCharsetRule from './rules/ForeignCharsetRule.js';

/**
 * Instance de RuleManager avec les r√®gles par d√©faut
 * RuleManager g√®re la logique inter-r√®gles et fournit des m√©thodes utilitaires
 */
const ruleManager = new RuleManager();

// Ajout de toutes les r√®gles
ruleManager
  // üßÆ Rule 1 : Prompt Size - Estimation de la taille en tokens
  .addRule(new PromptSizeRule())
  
  // üî† Rule 2 : Complex Words - D√©tection de mots complexes
  .addRule(new ComplexWordsRule())
  
  // üñºÔ∏è Rule 3 : Image Generation - Requ√™tes de g√©n√©ration d'image
  .addRule(new ImageGenerationRule())
  
  // üîß Rule 4 : Technical Content - Contenu technique
  .addRule(new TechnicalContentRule())
  
  // üìê Rule 5 : Structured Code - Structure de code
  .addRule(new StructuredCodeRule())
  
  // üìè Rule 6 : Long Prompt - Version am√©lior√©e
  .addRule(new LongPromptRule())
  
  // üß† Rule 7 : Analytical Intent - T√¢che cognitive
  .addRule(new AnalyticalIntentRule())
  
  // üåç Rule 8 : Foreign or Extended Charset - Caract√®res non-ASCII
  .addRule(new ForeignCharsetRule());

// Export du gestionnaire de r√®gles au lieu du tableau
export default ruleManager;